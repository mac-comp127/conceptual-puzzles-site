= content_for :nav do
  - if student.cohort_id?
    %a.back{href: grading_cohort_students_path(student.cohort)} Students

%main
  %h1 Student info
  
  .metadata-group
    .status
      Name:
      .status-message= student.name
    .status
      Email:
      .status-message= student.email
    - {created_at: "Created at", updated_at: "Last activity"}.each do |attr, label|
      .status
        = label + ":"
        .status-message
          - date = student.send(attr)
          = date.to_formatted_s(:db)
          .aside
            = time_ago_in_words(date)
            ago

  .admin-form.compact
    = form_with model: [:grading, student] do |form|
      = field_row form, :select, :cohort_id, 'Cohort', [[]] + Cohort.all.map { |c| [c.name_and_instructor, c.id] }
      = form.submit "Move"

  %h2 Puzzle scores

  %table.index
    %tr.header
      %th= #puzzle type
      %th Score
      %th Pending
      %th Graded
    - student.puzzle_statuses.each do |status|
      = render "puzzle_status", status:
    %tr.footer
      %th Total
      %td.numeric= percent_format student.total_score, decimal_places: 1
      %td{colspan: 2}
        .aside (#{student.puzzle_score_denominator} puzzles = full credit)

  - if student.unused_puzzle_statuses.any?
    %h3 Submissions for puzzle types not (yet) counted for this cohort
    %table.index
      - student.unused_puzzle_statuses.each do |status|
        = render "puzzle_status", status:
